<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>coastline_extractor</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <repositories>
    <!-- Topobyte for osm4j -->
    <repository>
      <id>topobyte</id>
      <name>Topobyte OSM4J Repository</name>
      <url>https://mvn.topobyte.de</url>
    </repository>

    <!-- Slimjars for Trove4j primitives -->
    <repository>
      <id>slimjars</id>
      <name>Slimjars Trove4j Repository</name>
      <url>https://mvn.slimjars.com</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.sparkjava</groupId>
      <artifactId>spark-core</artifactId>
      <version>2.9.4</version>
    </dependency>
    <!-- OSM4J: For reading PBF files -->
    <dependency>
      <groupId>de.topobyte</groupId>
      <artifactId>osm4j-pbf-full-runtime</artifactId>
      <version>1.4.0</version>
    </dependency>

    <!-- JTS: For geometry merging and handling -->
    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>1.18.2</version>
    </dependency>

    <!-- Jackson: For writing GeoJSON output -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.15.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.10.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This plugin still sets your mainClass in the manifest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.example.Main_costline_extractor</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Maven Shade Plugin: bundles all dependencies into a single JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- Do not generate a “reduced” POM; keep your own POM unchanged -->
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <!-- Place the resulting JAR under target/ with “-shaded” suffix -->
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>shaded</shadedClassifierName>
              <transformers>
                <!-- Make sure your Main class is in the manifest -->
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.example.Main_costline_extractor</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>